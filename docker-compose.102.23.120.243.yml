version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aml-postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - aml-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aml-redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - aml-network

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: aml-backend
    restart: always
    env_file:
      - .env.102.23.120.243
    environment:
      DATABASE_URL: postgresql://aml_user:${DB_PASSWORD:-changeme}@postgres:5432/aml_database
      REDIS_URL: redis://redis:6379/0
      CORS_ALLOWED_ORIGINS: "http://102.23.120.243,https://102.23.120.243,http://102.23.120.243:3000,http://102.23.120.243:3001,http://102.23.120.243:8080"
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    ports:
      - "50000:50000"
    networks:
      - aml-network
    depends_on:
      - postgres
      - redis

  # React Frontend
  frontend:
    build:
      context: ./aml-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://102.23.120.243:50000/api/v1
    container_name: aml-frontend
    restart: always
    environment:
      REACT_APP_API_URL: http://102.23.120.243:50000/api/v1
    ports:
      - "8080:80"
    networks:
      - aml-network
    depends_on:
      - backend

  # Nginx (Optional - if you want to use it)
  nginx:
    image: nginx:alpine
    container_name: aml-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./aml-frontend/build:/usr/share/nginx/html
    networks:
      - aml-network
    depends_on:
      - backend
      - frontend

networks:
  aml-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: